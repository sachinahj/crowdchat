#!/usr/bin/env node
var debug = require('debug')('twitter-crowd');
var app = require('../app');
var io = require('socket.io');

// entities
var helper = require('../entities/helper');
var User = require('../entities/user');

// serve
app.set('port', process.env.PORT || 3000);
var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});



// socket stuff
global.clients = {};
var sio = io.listen(server);

// on connection
sio.sockets.on('connection', function (socket) {
  console.log('a socket connected: ' + socket.id);
  global.clients[socket.id] = socket;

  // on new user
  socket.on('newUser', function (new_user) {
    new_user = new User(new_user, socket.id);
    socket.emit('userCreated', new_user);
    
    var selected_crowd = helper.getCrowd(new_user);
    var crowd = selected_crowd[0];
    var crowd_type = selected_crowd[1];

    if (crowd_type === "new") {
      for (var i = 0; i < crowd.users.length; i++) {
        global.clients[crowd.users[i].sid].join(crowd.id);
      }
      socket.emit('crowdAvailable', true);
      sio.sockets.to(crowd.id).emit('crowdUpdate', crowd);

    } else if (crowd_type === "update") {

      global.clients[new_user.sid].join(crowd.id);
      socket.emit('crowdAvailable', true);
      sio.sockets.to(crowd.id).emit('crowdUpdate', crowd);

    } else {

      socket.emit('crowdAvailable', false); 
    }
  });

  // on create new message
  socket.on('createNewMessage', function (new_message) {
    var crowd_id = new_message.crowd_id;
    var crowd = helper.createMessageForCrowd(new_message, crowd_id);
    sio.sockets.to(crowd.id).emit('crowdUpdate', crowd);
  });







  // on disconnect
  socket.on('disconnect', function () {
    delete global.clients[socket.id];
    console.log("a socket disconnected");
    var crowd = helper.deleteUserInCrowdFromSid(socket.id);
    if (crowd !== null) {
      sio.sockets.to(crowd[1]).emit('crowdUpdate', crowd[0]);
    }
  });

});
